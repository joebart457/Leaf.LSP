{
	"displayName": "Leaf",
	"name": "leaf",
	"patterns": [
	  {
		"include": "#value"
	  }
	],
	"repository": {
	  "comments": {
		"patterns": [
		  {
			"begin": "/\\*\\*(?!/)",
			"captures": {
			  "0": {
				"name": "punctuation.definition.comment.leaf"
			  }
			},
			"end": "\\*/",
			"name": "comment.block.documentation.leaf"
		  },
		  {
			"begin": "/\\*",
			"captures": {
			  "0": {
				"name": "punctuation.definition.comment.leaf"
			  }
			},
			"end": "\\*/",
			"name": "comment.block.leaf"
		  },
		  {
			"captures": {
			  "1": {
				"name": "punctuation.definition.comment.leaf"
			  }
			},
			"match": "(//).*$\\n?",
			"name": "comment.line.double-slash.leaf"
		  }
		]
	  },
	  "constant": {
		"match": "\\b(?:true|false|null)\\b",
		"name": "constant.language.leaf"
	  },
	  "keyword": {
		"patterns": [{ "include": "#control" }, { "include": "#usertype" }, { "include": "#type" }, { "include": "#modifier" },  { "include": "#definition" }]
	  },
	  "control": {
		"match": "\\b(if|while|return)\\b",
		"name": "keyword.control.leaf"
	  },
	  "definition": {
		"match": "\\b(defn|library|import|param|icon)\\b",
		"name": "keyword.other.leaf"
	  },
	  "operator": {
		"match": "\\b(set|add)\\b",
		"name": "keyword.operator.leaf"
	  },
	  "type": {
		"match": "\\b(type|field|local)\\b",
		"name": "storage.type.leaf"
	  },
	  "modifier": {
		"match": "\\b(gen|cdecl|stdcall)\\b",
		"name": "storage.modifier.leaf"
	  },
	  "usertype": {
		"match": "\\b(void|int|string|float|func|cfunc|ptr)\\b",
		"name": "entity.name.type.leaf"
	  },
	  "number": {
		"match": "\\b-?\\d\\d*.?\\d*(d|f)?\\b",
		"name": "constant.numeric.leaf"
	  },
	  "string": {
		"begin": "\"",
		"beginCaptures": {
		  "0": {
			"name": "punctuation.definition.string.begin.leaf"
		  }
		},
		"end": "\"",
		"endCaptures": {
		  "0": {
			"name": "punctuation.definition.string.end.leaf"
		  }
		},
		"name": "string.quoted.double.leaf",
		"patterns": [
		  {
			"include": "#stringcontent"
		  }
		]
	  },
	  "string-single": {
		"begin": "'",
		"beginCaptures": {
		  "0": {
			"name": "punctuation.definition.string.begin.leaf"
		  }
		},
		"end": "'",
		"endCaptures": {
		  "0": {
			"name": "punctuation.definition.string.end.leaf"
		  }
		},
		"name": "string.quoted.single.leaf",
		"patterns": [
		  {
			"include": "#stringcontent"
		  }
		]
	  },
	  "string-other": {
		"begin": "`",
		"beginCaptures": {
		  "0": {
			"name": "punctuation.definition.string.begin.leaf"
		  }
		},
		"end": "`",
		"endCaptures": {
		  "0": {
			"name": "punctuation.definition.string.end.leaf"
		  }
		},
		"name": "string.quoted.other.leaf",
		"patterns": [
		  {
			"include": "#stringcontent"
		  }
		]
	  },
	  "stringcontent": {
		"patterns": [
		  {
			"match": "\\\\(?:[\"\\\\/bfnrt]|u[0-9a-fA-F]{4})",
			"name": "constant.character.escape.leaf"
		  },
		  {
			"match": "\\\\.",
			"name": "invalid.illegal.unrecognized-string-escape.leaf"
		  }
		]
	  },
	  "expression": {
          "patterns": [
			 { "include": "#identifier" }, 
			 { "include": "#keyword" },
			 { "include": "#string" }, 
			 { "include": "#string-single" }, 
			 { "include": "#comments" }, 
			 { "include": "#string-other" }, 
			 { "include": "#number" }, 
			 { "include": "#constant" }, 
			 { "include": "#operator" }, 
			 { "include": "#parameter" }, 
			 { "include": "#paren-expression" }
			]
      },
	  "paren-expression": {
          "begin": "\\(",
          "end": "\\)",
          "beginCaptures": {
            "0": { "name": "punctuation.paren.open" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.paren.close" }
          },
          "name": "expression.group",
          "patterns": [{ "include": "#expression" }]
       },
	  "value": {
		"patterns": [
		  {
			"include": "#number"
		  },
		  {
			"include": "#comments"
		  },
		  {
			"include": "#expression"
		  }
		]
	  }
	},
	"scopeName": "source.leaf"
  }